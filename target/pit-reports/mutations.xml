<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>7</index></indexes><blocks><block>0</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>12</index></indexes><blocks><block>0</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>13</index></indexes><blocks><block>0</block></blocks><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>15</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced double return with 0.0d for com/example/Complex::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>9</index></indexes><blocks><block>0</block></blocks><killingTest>com.example.ComplexTest.[engine:junit-jupiter]/[class:com.example.ComplexTest]/[method:testAdd()]</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>14</index></indexes><blocks><block>0</block></blocks><killingTest>com.example.ComplexTest.[engine:junit-jupiter]/[class:com.example.ComplexTest]/[method:testAdd()]</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>16</index></indexes><blocks><block>1</block></blocks><killingTest>com.example.ComplexTest.[engine:junit-jupiter]/[class:com.example.ComplexTest]/[method:testAdd()]</killingTest><description>replaced return value with null for com/example/Complex::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>angle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced double return with 0.0d for com/example/Complex::angle</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>arg</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>5</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced double return with 0.0d for com/example/Complex::arg</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()Lcom/example/Complex;</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><indexes><index>9</index></indexes><blocks><block>0</block></blocks><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()Lcom/example/Complex;</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>11</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for com/example/Complex::conjugate</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lcom/example/Complex;</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>6</index></indexes><blocks><block>0</block></blocks><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lcom/example/Complex;</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for com/example/Complex::divide</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>22</index></indexes><blocks><block>4</block></blocks><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>26</index></indexes><blocks><block>4</block></blocks><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>28</index></indexes><blocks><block>5</block></blocks><killingTest/><description>replaced return value with null for com/example/Complex::divide</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>inverse</mutatedMethod><methodDescription>()Lcom/example/Complex;</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for com/example/Complex::inverse</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>isPure</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>7</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>isPure</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>15</index></indexes><blocks><block>3</block></blocks><killingTest/><description>replaced boolean return with true for com/example/Complex::isPure</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>log</mutatedMethod><methodDescription>()Lcom/example/Complex;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>11</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for com/example/Complex::log</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>mod</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>5</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced double return with 0.0d for com/example/Complex::mod</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lcom/example/Complex;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>8</index></indexes><blocks><block>0</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lcom/example/Complex;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>12</index></indexes><blocks><block>0</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lcom/example/Complex;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>14</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for com/example/Complex::multiply</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>15</index></indexes><blocks><block>0</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>16</index></indexes><blocks><block>0</block></blocks><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>25</index></indexes><blocks><block>0</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>26</index></indexes><blocks><block>0</block></blocks><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>35</index></indexes><blocks><block>0</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>36</index></indexes><blocks><block>0</block></blocks><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>45</index></indexes><blocks><block>0</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>46</index></indexes><blocks><block>0</block></blocks><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>55</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for com/example/Complex::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lcom/example/Complex;</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><indexes><index>7</index></indexes><blocks><block>0</block></blocks><killingTest>com.example.ComplexTest.[engine:junit-jupiter]/[class:com.example.ComplexTest]/[method:testNegate()]</killingTest><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lcom/example/Complex;</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><indexes><index>10</index></indexes><blocks><block>0</block></blocks><killingTest>com.example.ComplexTest.[engine:junit-jupiter]/[class:com.example.ComplexTest]/[method:testNegate()]</killingTest><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lcom/example/Complex;</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>12</index></indexes><blocks><block>1</block></blocks><killingTest>com.example.ComplexTest.[engine:junit-jupiter]/[class:com.example.ComplexTest]/[method:testNegate()]</killingTest><description>replaced return value with null for com/example/Complex::negate</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>norm</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>5</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced double return with 0.0d for com/example/Complex::norm</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>phase</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>5</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced double return with 0.0d for com/example/Complex::phase</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(D)Lcom/example/Complex;</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>22</index></indexes><blocks><block>3</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(D)Lcom/example/Complex;</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>24</index></indexes><blocks><block>4</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(D)Lcom/example/Complex;</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>30</index></indexes><blocks><block>5</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(D)Lcom/example/Complex;</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>32</index></indexes><blocks><block>6</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(D)Lcom/example/Complex;</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>36</index></indexes><blocks><block>7</block></blocks><killingTest/><description>replaced return value with null for com/example/Complex::pow</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>22</index></indexes><blocks><block>0</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>25</index></indexes><blocks><block>0</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>26</index></indexes><blocks><block>0</block></blocks><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>32</index></indexes><blocks><block>0</block></blocks><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>39</index></indexes><blocks><block>1</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>47</index></indexes><blocks><block>2</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>55</index></indexes><blocks><block>3</block></blocks><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>60</index></indexes><blocks><block>4</block></blocks><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>67</index></indexes><blocks><block>6</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>70</index></indexes><blocks><block>7</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>77</index></indexes><blocks><block>9</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>80</index></indexes><blocks><block>10</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>81</index></indexes><blocks><block>10</block></blocks><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>82</index></indexes><blocks><block>10</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>89</index></indexes><blocks><block>10</block></blocks><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>94</index></indexes><blocks><block>11</block></blocks><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>101</index></indexes><blocks><block>13</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>104</index></indexes><blocks><block>14</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>111</index></indexes><blocks><block>16</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>114</index></indexes><blocks><block>17</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>115</index></indexes><blocks><block>17</block></blocks><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>116</index></indexes><blocks><block>17</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>pow</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>125</index></indexes><blocks><block>18</block></blocks><killingTest/><description>replaced return value with null for com/example/Complex::pow</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>9</index></indexes><blocks><block>0</block></blocks><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>14</index></indexes><blocks><block>0</block></blocks><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>subtract</mutatedMethod><methodDescription>(Lcom/example/Complex;)Lcom/example/Complex;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>16</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for com/example/Complex::subtract</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with &quot;&quot; for com/example/Complex::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>22</index></indexes><blocks><block>3</block></blocks><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><indexes><index>34</index></indexes><blocks><block>5</block></blocks><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>22</index></indexes><blocks><block>3</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>73</index></indexes><blocks><block>15</block></blocks><killingTest/><description>replaced return value with &quot;&quot; for com/example/Complex::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>trim</mutatedMethod><methodDescription>(DI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>12</index></indexes><blocks><block>1</block></blocks><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>trim</mutatedMethod><methodDescription>(DI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>16</index></indexes><blocks><block>1</block></blocks><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Complex.java</sourceFile><mutatedClass>com.example.Complex</mutatedClass><mutatedMethod>trim</mutatedMethod><methodDescription>(DI)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>17</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced double return with 0.0d for com/example/Complex::trim</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()Lcom/example/Rational;</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()Lcom/example/Rational;</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>15</index></indexes><blocks><block>5</block></blocks><killingTest/><description>replaced return value with null for com/example/Rational::abs</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(Lcom/example/Rational;)I</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>23</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced int return with 0 for com/example/Rational::compareTo</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>divides</mutatedMethod><methodDescription>(Lcom/example/Rational;)Lcom/example/Rational;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for com/example/Rational::divides</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>doubleValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>9</index></indexes><blocks><block>2</block></blocks><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>doubleValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced double return with 0.0d for com/example/Rational::doubleValue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>14</index></indexes><blocks><block>2</block></blocks><killingTest>com.example.RationalTest.[engine:junit-jupiter]/[class:com.example.RationalTest]/[method:testEquals()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>26</index></indexes><blocks><block>6</block></blocks><killingTest>com.example.RationalTest.[engine:junit-jupiter]/[class:com.example.RationalTest]/[method:testEquals()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>44</index></indexes><blocks><block>9</block></blocks><killingTest>com.example.RationalTest.[engine:junit-jupiter]/[class:com.example.RationalTest]/[method:testEquals()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>50</index></indexes><blocks><block>11</block></blocks><killingTest>com.example.RationalTest.[engine:junit-jupiter]/[class:com.example.RationalTest]/[method:testEquals()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced boolean return with false for com/example/Rational::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>18</index></indexes><blocks><block>3</block></blocks><killingTest/><description>replaced boolean return with true for com/example/Rational::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>30</index></indexes><blocks><block>7</block></blocks><killingTest/><description>replaced boolean return with true for com/example/Rational::equals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>58</index></indexes><blocks><block>14</block></blocks><killingTest/><description>replaced boolean return with true for com/example/Rational::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>floatValue</mutatedMethod><methodDescription>()F</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced float return with 0.0f for com/example/Rational::floatValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>getDen</mutatedMethod><methodDescription>()Ljava/math/BigInteger;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with null for com/example/Rational::getDen</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>getNum</mutatedMethod><methodDescription>()Ljava/math/BigInteger;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with null for com/example/Rational::getNum</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>16</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced int return with 0 for com/example/Rational::hashCode</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>intValue</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced int return with 0 for com/example/Rational::intValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>isIntegral</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced boolean return with false for com/example/Rational::isIntegral</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>isIntegral</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced boolean return with true for com/example/Rational::isIntegral</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>longValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced long return with 0 for com/example/Rational::longValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(Lcom/example/Rational;Lcom/example/Rational;)Lcom/example/Rational;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(Lcom/example/Rational;Lcom/example/Rational;)Lcom/example/Rational;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(Lcom/example/Rational;Lcom/example/Rational;)Lcom/example/Rational;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for com/example/Rational::max</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(Lcom/example/Rational;Lcom/example/Rational;)Lcom/example/Rational;</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>15</index></indexes><blocks><block>3</block></blocks><killingTest/><description>replaced return value with null for com/example/Rational::max</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(Lcom/example/Rational;)Lcom/example/Rational;</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for com/example/Rational::minus</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>negate</mutatedMethod><methodDescription>()Lcom/example/Rational;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>9</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for com/example/Rational::negate</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(J)Lcom/example/Rational;</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for com/example/Rational::of</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/example/Rational;</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for com/example/Rational::of</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)Lcom/example/Rational;</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>14</index></indexes><blocks><block>2</block></blocks><killingTest>com.example.RationalTest.[engine:junit-jupiter]/[class:com.example.RationalTest]/[method:testOf()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)Lcom/example/Rational;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>27</index></indexes><blocks><block>5</block></blocks><killingTest>com.example.RationalTest.[engine:junit-jupiter]/[class:com.example.RationalTest]/[method:testToString()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>of</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)Lcom/example/Rational;</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>62</index></indexes><blocks><block>13</block></blocks><killingTest>com.example.RationalTest.[engine:junit-jupiter]/[class:com.example.RationalTest]/[method:testToString()]</killingTest><description>replaced return value with null for com/example/Rational::of</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>ofBigDecimal</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Lcom/example/Rational;</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>5</index></indexes><blocks><block>1</block></blocks><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>ofBigDecimal</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Lcom/example/Rational;</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>1</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>ofBigDecimal</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Lcom/example/Rational;</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>16</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for com/example/Rational::ofBigDecimal</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>ofBigDecimal</mutatedMethod><methodDescription>(Ljava/math/BigDecimal;)Lcom/example/Rational;</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>35</index></indexes><blocks><block>9</block></blocks><killingTest/><description>replaced return value with null for com/example/Rational::ofBigDecimal</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>ofBigInteger</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Lcom/example/Rational;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for com/example/Rational::ofBigInteger</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>ofLong</mutatedMethod><methodDescription>(J)Lcom/example/Rational;</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>2</block></blocks><killingTest>com.example.RationalTest.[engine:junit-jupiter]/[class:com.example.RationalTest]/[method:testTimes()]</killingTest><description>replaced return value with null for com/example/Rational::ofLong</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>ofLongs</mutatedMethod><methodDescription>(JJ)Lcom/example/Rational;</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>3</block></blocks><killingTest/><description>replaced return value with null for com/example/Rational::ofLongs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>ofNormalForm</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)Lcom/example/Rational;</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest>com.example.RationalTest.[engine:junit-jupiter]/[class:com.example.RationalTest]/[method:testToString()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>ofNormalForm</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)Lcom/example/Rational;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>ofNormalForm</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)Lcom/example/Rational;</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>23</index></indexes><blocks><block>6</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>ofNormalForm</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)Lcom/example/Rational;</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>34</index></indexes><blocks><block>9</block></blocks><killingTest>com.example.RationalTest.[engine:junit-jupiter]/[class:com.example.RationalTest]/[method:testTimes()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>ofNormalForm</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)Lcom/example/Rational;</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for com/example/Rational::ofNormalForm</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>ofNormalForm</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)Lcom/example/Rational;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>27</index></indexes><blocks><block>7</block></blocks><killingTest>com.example.RationalTest.[engine:junit-jupiter]/[class:com.example.RationalTest]/[method:testToString()]</killingTest><description>replaced return value with null for com/example/Rational::ofNormalForm</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>ofNormalForm</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)Lcom/example/Rational;</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>38</index></indexes><blocks><block>10</block></blocks><killingTest/><description>replaced return value with null for com/example/Rational::ofNormalForm</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>ofNormalForm</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;)Lcom/example/Rational;</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>47</index></indexes><blocks><block>12</block></blocks><killingTest>com.example.RationalTest.[engine:junit-jupiter]/[class:com.example.RationalTest]/[method:testTimes()]</killingTest><description>replaced return value with null for com/example/Rational::ofNormalForm</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>ofString</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/example/Rational;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>42</index></indexes><blocks><block>7</block></blocks><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>ofString</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/example/Rational;</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>11</index></indexes><blocks><block>1</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>ofString</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/example/Rational;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>23</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for com/example/Rational::ofString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>ofString</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/example/Rational;</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>53</index></indexes><blocks><block>11</block></blocks><killingTest/><description>replaced return value with null for com/example/Rational::ofString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>plus</mutatedMethod><methodDescription>(Lcom/example/Rational;)Lcom/example/Rational;</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>14</index></indexes><blocks><block>1</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>plus</mutatedMethod><methodDescription>(Lcom/example/Rational;)Lcom/example/Rational;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>24</index></indexes><blocks><block>3</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>plus</mutatedMethod><methodDescription>(Lcom/example/Rational;)Lcom/example/Rational;</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>18</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for com/example/Rational::plus</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>plus</mutatedMethod><methodDescription>(Lcom/example/Rational;)Lcom/example/Rational;</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for com/example/Rational::plus</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>plus</mutatedMethod><methodDescription>(Lcom/example/Rational;)Lcom/example/Rational;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>49</index></indexes><blocks><block>10</block></blocks><killingTest/><description>replaced return value with null for com/example/Rational::plus</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>reciprocal</mutatedMethod><methodDescription>()Lcom/example/Rational;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>reciprocal</mutatedMethod><methodDescription>()Lcom/example/Rational;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>23</index></indexes><blocks><block>5</block></blocks><killingTest/><description>replaced return value with null for com/example/Rational::reciprocal</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>signum</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced int return with 0 for com/example/Rational::signum</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(Lcom/example/Rational;)Lcom/example/Rational;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>14</index></indexes><blocks><block>1</block></blocks><killingTest>com.example.RationalTest.[engine:junit-jupiter]/[class:com.example.RationalTest]/[method:testTimes()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(Lcom/example/Rational;)Lcom/example/Rational;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>com.example.RationalTest.[engine:junit-jupiter]/[class:com.example.RationalTest]/[method:testTimes()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(Lcom/example/Rational;)Lcom/example/Rational;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest>com.example.RationalTest.[engine:junit-jupiter]/[class:com.example.RationalTest]/[method:testTimes()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(Lcom/example/Rational;)Lcom/example/Rational;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>38</index></indexes><blocks><block>6</block></blocks><killingTest>com.example.RationalTest.[engine:junit-jupiter]/[class:com.example.RationalTest]/[method:testTimes()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(Lcom/example/Rational;)Lcom/example/Rational;</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>22</index></indexes><blocks><block>3</block></blocks><killingTest/><description>replaced return value with null for com/example/Rational::times</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(Lcom/example/Rational;)Lcom/example/Rational;</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>32</index></indexes><blocks><block>5</block></blocks><killingTest/><description>replaced return value with null for com/example/Rational::times</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(Lcom/example/Rational;)Lcom/example/Rational;</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>42</index></indexes><blocks><block>7</block></blocks><killingTest/><description>replaced return value with null for com/example/Rational::times</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(Lcom/example/Rational;)Lcom/example/Rational;</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>73</index></indexes><blocks><block>13</block></blocks><killingTest>com.example.RationalTest.[engine:junit-jupiter]/[class:com.example.RationalTest]/[method:testTimes()]</killingTest><description>replaced return value with null for com/example/Rational::times</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>12</index></indexes><blocks><block>2</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rational.java</sourceFile><mutatedClass>com.example.Rational</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>43</index></indexes><blocks><block>11</block></blocks><killingTest>com.example.RationalTest.[engine:junit-jupiter]/[class:com.example.RationalTest]/[method:testToString()]</killingTest><description>replaced return value with &quot;&quot; for com/example/Rational::toString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TestClass.java</sourceFile><mutatedClass>com.example.TestClass</mutatedClass><mutatedMethod>countCharacters</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>29</index></indexes><blocks><block>5</block></blocks><killingTest>com.example.TestClassTest.[engine:junit-jupiter]/[class:com.example.TestClassTest]/[method:countCharacters()]</killingTest><description>replaced int return with 0 for com/example/TestClass::countCharacters</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TestClass.java</sourceFile><mutatedClass>com.example.TestClass</mutatedClass><mutatedMethod>countFoos</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>16</index></indexes><blocks><block>1</block></blocks><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TestClass.java</sourceFile><mutatedClass>com.example.TestClass</mutatedClass><mutatedMethod>countFoos</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><indexes><index>11</index></indexes><blocks><block>0</block></blocks><killingTest/><description>Changed increment from 10 to -10</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TestClass.java</sourceFile><mutatedClass>com.example.TestClass</mutatedClass><mutatedMethod>countFoos</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><indexes><index>25</index></indexes><blocks><block>3</block></blocks><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TestClass.java</sourceFile><mutatedClass>com.example.TestClass</mutatedClass><mutatedMethod>countFoos</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><indexes><index>30</index></indexes><blocks><block>4</block></blocks><killingTest/><description>Changed increment from -15 to 15</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TestClass.java</sourceFile><mutatedClass>com.example.TestClass</mutatedClass><mutatedMethod>countFoos</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>21</index></indexes><blocks><block>2</block></blocks><killingTest/><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TestClass.java</sourceFile><mutatedClass>com.example.TestClass</mutatedClass><mutatedMethod>countFoos</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>35</index></indexes><blocks><block>4</block></blocks><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TestClass.java</sourceFile><mutatedClass>com.example.TestClass</mutatedClass><mutatedMethod>countFoos</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>16</index></indexes><blocks><block>1</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TestClass.java</sourceFile><mutatedClass>com.example.TestClass</mutatedClass><mutatedMethod>countFoos</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>22</index></indexes><blocks><block>2</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TestClass.java</sourceFile><mutatedClass>com.example.TestClass</mutatedClass><mutatedMethod>countFoos</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>40</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced int return with 0 for com/example/TestClass::countFoos</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TestClass.java</sourceFile><mutatedClass>com.example.TestClass</mutatedClass><mutatedMethod>removeSpaces</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>30</index></indexes><blocks><block>4</block></blocks><killingTest>com.example.TestClassTest.[engine:junit-jupiter]/[class:com.example.TestClassTest]/[method:removeSpaces()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TestClass.java</sourceFile><mutatedClass>com.example.TestClass</mutatedClass><mutatedMethod>removeSpaces</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>47</index></indexes><blocks><block>9</block></blocks><killingTest>com.example.TestClassTest.[engine:junit-jupiter]/[class:com.example.TestClassTest]/[method:removeSpaces()]</killingTest><description>replaced return value with &quot;&quot; for com/example/TestClass::removeSpaces</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimpleInteger.java</sourceFile><mutatedClass>com.example.SimpleInteger</mutatedClass><mutatedMethod>foo</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>13</index></indexes><blocks><block>0</block></blocks><killingTest>com.example.SimpleIntegerTest.[engine:junit-jupiter]/[class:com.example.SimpleIntegerTest]/[method:foo()]</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimpleInteger.java</sourceFile><mutatedClass>com.example.SimpleInteger</mutatedClass><mutatedMethod>foo</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>23</index></indexes><blocks><block>0</block></blocks><killingTest>com.example.SimpleIntegerTest.[engine:junit-jupiter]/[class:com.example.SimpleIntegerTest]/[method:foo()]</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimpleInteger.java</sourceFile><mutatedClass>com.example.SimpleInteger</mutatedClass><mutatedMethod>foo</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>29</index></indexes><blocks><block>0</block></blocks><killingTest>com.example.SimpleIntegerTest.[engine:junit-jupiter]/[class:com.example.SimpleIntegerTest]/[method:foo()]</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimpleInteger.java</sourceFile><mutatedClass>com.example.SimpleInteger</mutatedClass><mutatedMethod>foo</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>31</index></indexes><blocks><block>0</block></blocks><killingTest>com.example.SimpleIntegerTest.[engine:junit-jupiter]/[class:com.example.SimpleIntegerTest]/[method:foo()]</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimpleInteger.java</sourceFile><mutatedClass>com.example.SimpleInteger</mutatedClass><mutatedMethod>foo</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>32</index></indexes><blocks><block>0</block></blocks><killingTest>com.example.SimpleIntegerTest.[engine:junit-jupiter]/[class:com.example.SimpleIntegerTest]/[method:foo()]</killingTest><description>replaced int return with 0 for com/example/SimpleInteger::foo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NestedLoop.java</sourceFile><mutatedClass>com.example.NestedLoop</mutatedClass><mutatedMethod>loop</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>7</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>13</index></indexes><blocks><block>1</block></blocks><killingTest>com.example.NestedLoopTest.[engine:junit-jupiter]/[class:com.example.NestedLoopTest]/[method:loop()]</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NestedLoop.java</sourceFile><mutatedClass>com.example.NestedLoop</mutatedClass><mutatedMethod>loop</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>18</index></indexes><blocks><block>2</block></blocks><killingTest>com.example.NestedLoopTest.[engine:junit-jupiter]/[class:com.example.NestedLoopTest]/[method:loop()]</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NestedLoop.java</sourceFile><mutatedClass>com.example.NestedLoop</mutatedClass><mutatedMethod>loop</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>7</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>13</index></indexes><blocks><block>1</block></blocks><killingTest>com.example.NestedLoopTest.[engine:junit-jupiter]/[class:com.example.NestedLoopTest]/[method:loop()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NestedLoop.java</sourceFile><mutatedClass>com.example.NestedLoop</mutatedClass><mutatedMethod>loop</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>28</index></indexes><blocks><block>3</block></blocks><killingTest>com.example.NestedLoopTest.[engine:junit-jupiter]/[class:com.example.NestedLoopTest]/[method:loop()]</killingTest><description>replaced int return with 0 for com/example/NestedLoop::loop</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GCD.java</sourceFile><mutatedClass>com.example.GCD</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>14</index></indexes><blocks><block>2</block></blocks><killingTest>com.example.GCDTest.[engine:junit-jupiter]/[class:com.example.GCDTest]/[method:testGCD()]</killingTest><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GCD.java</sourceFile><mutatedClass>com.example.GCD</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>7</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest>com.example.GCDTest.[engine:junit-jupiter]/[class:com.example.GCDTest]/[method:testGCD()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GCD.java</sourceFile><mutatedClass>com.example.GCD</mutatedClass><mutatedMethod>gcd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>29</index></indexes><blocks><block>3</block></blocks><killingTest>com.example.GCDTest.[engine:junit-jupiter]/[class:com.example.GCDTest]/[method:testGCD()]</killingTest><description>replaced int return with 0 for com/example/GCD::gcd</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Calculator.java</sourceFile><mutatedClass>com.example.Calculator</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>30</index></indexes><blocks><block>4</block></blocks><killingTest>com.example.CalculatorTest.[engine:junit-jupiter]/[class:com.example.CalculatorTest]/[method:testEvaluate2()]</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Calculator.java</sourceFile><mutatedClass>com.example.Calculator</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>10</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>40</index></indexes><blocks><block>5</block></blocks><killingTest>com.example.CalculatorTest.[engine:junit-jupiter]/[class:com.example.CalculatorTest]/[method:testEvaluate2()]</killingTest><description>replaced int return with 0 for com/example/Calculator::evaluate</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>App.java</sourceFile><mutatedClass>com.example.App</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>11</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
</mutations>
